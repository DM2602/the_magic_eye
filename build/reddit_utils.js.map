{"version":3,"sources":["../src/reddit_utils.js"],"names":["reddit","submissionId","submission","getSubmission","comments","find","comment","distinguished","removed","getModComment","modComment","body","includes","isMagicIgnore","isRepostOnlyByUserRemoval","isRepostRemoval","startRemoval","endRemoval","log","info","chalk","magenta","substring","indexOf","length","lastIndexOf","getRemovalReason","require","config","setLevel","process","env","LOG_LEVEL","sliceSubmissionId","slice","module","exports"],"mappings":";;;;;;;uEAUA,iBAA6BA,MAA7B,EAAqCC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,kCADV,GACuBF,OAAOG,aAAP,CAAqBF,YAArB,CADvB;AAAA;AAAA,+BAE2BC,WAAWE,QAFtC;;AAAA;AAEUA,gCAFV;AAAA,yDAGWA,SAASC,IAAT,CAAc;AAAA,mCAAWC,QAAQC,aAAR,IAAyB,WAAzB,IAAwCD,QAAQE,OAAR,IAAmB,IAAtE;AAAA,yBAAd,CAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,a;;;;;;wEAMf,kBAA6BC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,uCACWA,cAAc,IADzB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,+BACwCA,WAAWC,IADnD;;AAAA;AAAA,sDACyDC,QADzD,CACkE,mBADlE;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,a;;;;;;wEAIf,kBAAyCH,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,uCACWA,cAAc,IADzB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,+BACwCA,WAAWC,IADnD;;AAAA;AAAA,sDACyDC,QADzD,CACkE,0BADlE;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeE,yB;;;;;;wEAIf,kBAA+BJ,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,uCACWA,cAAc,IADzB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,+BACwCA,WAAWC,IADnD;;AAAA;AAAA,sDACyDC,QADzD,CACkE,aADlE;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeG,e;;;;;;wEAIf,kBAAgCL,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACuBA,WAAWC,IADlC;;AAAA;AACUA,4BADV;AAEUK,oCAFV,GAEyB,oBAFzB;AAGUC,kCAHV,GAGuB,iBAHvB;;AAAA,8BAKQ,CAACN,KAAKC,QAAL,CAAcI,YAAd,CAAD,IAAgC,CAACL,KAAKC,QAAL,CAAcK,UAAd,CALzC;AAAA;AAAA;AAAA;;AAMQC,4BAAIC,IAAJ,CAASC,MAAMC,OAAN,CAAc,wDAAd,CAAT;AANR,0DAOe,IAPf;;AAAA;AAAA,0DAUWV,KAAKW,SAAL,CAAeX,KAAKY,OAAL,CAAaP,YAAb,IAA6BA,aAAaQ,MAAzD,EAAiEb,KAAKc,WAAL,CAAiBR,UAAjB,CAAjE,CAVX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeS,gB;;;;;;;AA1Bf;AACAC,QAAQ,QAAR,EAAkBC,MAAlB;AACA,IAAMV,MAAMS,QAAQ,UAAR,CAAZ;AACAT,IAAIW,QAAJ,CAAaC,QAAQC,GAAR,CAAYC,SAAzB;;AAEA;AACA,IAAMZ,QAAQO,QAAQ,OAAR,CAAd;;AAiCA,SAASM,iBAAT,CAA2BhC,YAA3B,EAAyC;AACrC,WAAOA,aAAaiC,KAAb,CAAmB,CAAnB,EAAsBjC,aAAauB,MAAnC,CAAP,CADqC,CACc;AACtD;;AAGDW,OAAOC,OAAP,GAAiB;AACb3B,gCADa;AAEbK,wDAFa;AAGbD,gCAHa;AAIbE,oCAJa;AAKbW,sCALa;AAMbO;AANa,CAAjB","file":"reddit_utils.js","sourcesContent":["export {}\r\n\r\n// standard modules\r\nrequire('dotenv').config();\r\nconst log = require('loglevel');\r\nlog.setLevel(process.env.LOG_LEVEL);\r\n\r\n// reddit modules\r\nconst chalk = require('chalk');\r\n\r\nasync function getModComment(reddit, submissionId) {\r\n    const submission = reddit.getSubmission(submissionId);\r\n    const comments = await submission.comments;\r\n    return comments.find(comment => comment.distinguished == 'moderator' && comment.removed != true);\r\n}\r\n\r\nasync function isMagicIgnore(modComment) {\r\n    return modComment != null && (await modComment.body).includes('[](#magic_ignore)'); // mod wants removal ignored\r\n}\r\n\r\nasync function isRepostOnlyByUserRemoval(modComment) {\r\n    return modComment != null && (await modComment.body).includes('[](#repost_only_by_user)'); // mod has told them to resubmit an altered/cropped version\r\n}\r\n\r\nasync function isRepostRemoval(modComment) {\r\n    return modComment != null && (await modComment.body).includes('[](#repost)'); // mod has told them to resubmit an altered/cropped version\r\n}\r\n\r\nasync function getRemovalReason(modComment) {\r\n    const body = await modComment.body;   \r\n    const startRemoval = '[](#start_removal)';\r\n    const endRemoval = '[](#end_removal';\r\n\r\n    if (!body.includes(startRemoval) || !body.includes(endRemoval) ) {\r\n        log.info(chalk.magenta(\"Moderator comment doesn't include correct bookend tags\"));\r\n        return null;\r\n    }\r\n\r\n    return body.substring(body.indexOf(startRemoval) + startRemoval.length, body.lastIndexOf(endRemoval));\r\n}\r\n\r\nfunction sliceSubmissionId(submissionId) {\r\n    return submissionId.slice(3, submissionId.length); // id is prefixed with \"id_\"\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    getModComment,\r\n    isRepostOnlyByUserRemoval,\r\n    isMagicIgnore,\r\n    isRepostRemoval,\r\n    getRemovalReason,\r\n    sliceSubmissionId,\r\n};"]}